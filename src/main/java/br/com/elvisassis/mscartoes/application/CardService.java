package br.com.elvisassis.mscartoes.application;import br.com.elvisassis.mscartoes.dto.CardDTO;import br.com.elvisassis.mscartoes.exception.ResourceNotFoundException;import br.com.elvisassis.mscartoes.infra.repository.CardRepository;import jakarta.transaction.Transactional;import lombok.RequiredArgsConstructor;import org.springframework.stereotype.Service;import java.math.BigDecimal;import java.util.List;import java.util.stream.Collectors;@Service@RequiredArgsConstructorpublic class CardService {    private final CardRepository repository;    @Transactional    public CardDTO save(CardDTO cardDTO) {        var card = cardDTO.toModel();        return new CardDTO(repository.save(card));    }    public List<CardDTO> findCardIcomeLasThenEqual(Long income) {        var incomeBigDecimal = BigDecimal.valueOf(income);        var cards = repository.findByIncomeLessThanEqual(incomeBigDecimal);        if (cards.isEmpty()) throw new ResourceNotFoundException("Não há cartão dispnivel!");        return cards.stream()                .map(CardDTO::new)                .collect(Collectors.toList());    }}