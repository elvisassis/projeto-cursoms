package br.com.elvisassis.msavaliadorcredito.application;import br.com.elvisassis.msavaliadorcredito.application.ex.ClientDataNotFoundException;import br.com.elvisassis.msavaliadorcredito.application.ex.ErrorComunicationMicroServicesException;import br.com.elvisassis.msavaliadorcredito.domain.model.ClientCard;import br.com.elvisassis.msavaliadorcredito.domain.model.ClientData;import br.com.elvisassis.msavaliadorcredito.domain.model.ClientSituation;import br.com.elvisassis.msavaliadorcredito.infra.clients.CardResourceClient;import br.com.elvisassis.msavaliadorcredito.infra.clients.ClientResourceClient;import feign.FeignException;import lombok.RequiredArgsConstructor;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.stereotype.Service;import java.util.List;@Service@RequiredArgsConstructorpublic class CreditAssessorService {    private final ClientResourceClient client;    private final CardResourceClient card;    public ClientSituation getSituationClinte(String cpf) throws ClientDataNotFoundException, ErrorComunicationMicroServicesException {        try {            ResponseEntity<ClientData> clientData = client.clientData(cpf);            ResponseEntity<List<ClientCard>> cardData = card.getCardsByClients(cpf);            return ClientSituation                    .builder()                    .client(clientData.getBody())                    .cards(cardData.getBody())                    .build();        } catch (FeignException.FeignClientException ex) {            int status = ex.status();            if (HttpStatus.NOT_FOUND.value() == status) {                throw new ClientDataNotFoundException();            }        throw new ErrorComunicationMicroServicesException(ex.getMessage(), status);        }    }}