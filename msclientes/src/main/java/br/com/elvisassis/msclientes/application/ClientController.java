package br.com.elvisassis.msclientes.application;import br.com.elvisassis.msclientes.dto.ClientDTO;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import org.springframework.web.servlet.support.ServletUriComponentsBuilder;import java.net.URI;@Slf4j@RestController@RequestMapping("/clientes")@RequiredArgsConstructorpublic class ClientController {    private final ClientService service;    @PostMapping    public ResponseEntity<ClientDTO> save(@RequestBody ClientDTO clientDto) {        var client = service.save(clientDto);        URI headerLocation = ServletUriComponentsBuilder                .fromCurrentRequest()                .query("cpf={cpf}")                .buildAndExpand(client.getCpf())                .toUri();        return ResponseEntity.created(headerLocation).build();    }    @GetMapping(params = "cpf")    public ResponseEntity<ClientDTO> findByCpf(@RequestParam("cpf") String cpf) {        var client = service.findByCPF(cpf);        return ResponseEntity.ok(client);    }}